---
http_interactions:
- request:
    method: head
    uri: https://rtyley.github.io/bfg-repo-cleaner/#usage
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      server:
      - GitHub.com
      content-type:
      - text/html; charset=utf-8
      permissions-policy:
      - interest-cohort=()
      last-modified:
      - Sun, 21 Mar 2021 22:37:56 GMT
      access-control-allow-origin:
      - "*"
      etag:
      - '"6057cac4-4071"'
      expires:
      - Fri, 31 Dec 2021 16:47:42 GMT
      cache-control:
      - max-age=600
      x-proxy-cache:
      - MISS
      x-github-request-id:
      - 5BBE:5C68:20A5CEB:31FCB51:61CF31D6
      accept-ranges:
      - bytes
      date:
      - Fri, 31 Dec 2021 16:37:42 GMT
      via:
      - 1.1 varnish
      age:
      - '0'
      x-served-by:
      - cache-ewr18144-EWR
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1640968662.435292,VS0,VE15
      vary:
      - Accept-Encoding
      x-fastly-request-id:
      - c562ec0ecf005937ce303a6c6ddfe20642999a16
      content-length:
      - '16497'
    body:
      encoding: ASCII-8BIT
      string: ''
    http_version: '2'
    adapter_metadata:
      effective_url: https://rtyley.github.io/bfg-repo-cleaner/#usage
  recorded_at: Fri, 31 Dec 2021 16:37:42 GMT
- request:
    method: head
    uri: https://jekyllrb.com/docs/configuration/#markdown-options
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      server:
      - GitHub.com
      content-type:
      - text/html; charset=utf-8
      last-modified:
      - Thu, 30 Dec 2021 22:31:10 GMT
      access-control-allow-origin:
      - "*"
      etag:
      - '"61ce332e-336b"'
      expires:
      - Fri, 31 Dec 2021 16:47:42 GMT
      cache-control:
      - max-age=600
      x-proxy-cache:
      - MISS
      x-github-request-id:
      - 1CFC:1032:FD378A:204B025:61CF31D6
      accept-ranges:
      - bytes
      date:
      - Fri, 31 Dec 2021 16:37:42 GMT
      via:
      - 1.1 varnish
      age:
      - '0'
      x-served-by:
      - cache-ewr18132-EWR
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1640968662.484815,VS0,VE15
      vary:
      - Accept-Encoding
      x-fastly-request-id:
      - e86ee1907af0803492b2cfc57ac251f05843820a
      content-length:
      - '13163'
    body:
      encoding: ASCII-8BIT
      string: ''
    http_version: '2'
    adapter_metadata:
      effective_url: https://jekyllrb.com/docs/configuration/#markdown-options
  recorded_at: Fri, 31 Dec 2021 16:37:42 GMT
- request:
    method: head
    uri: https://en.wikipedia.org/wiki/Phase-locked_loop#Clock_generation
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      date:
      - Thu, 30 Dec 2021 23:48:05 GMT
      server:
      - mw1389.eqiad.wmnet
      x-content-type-options:
      - nosniff
      p3p:
      - CP="See https://en.wikipedia.org/wiki/Special:CentralAutoLogin/P3P for more
        info."
      content-language:
      - en
      vary:
      - Accept-Encoding,Cookie,Authorization
      last-modified:
      - Thu, 30 Dec 2021 22:36:16 GMT
      content-type:
      - text/html; charset=UTF-8
      age:
      - '60576'
      x-cache:
      - cp1083 hit, cp1089 hit/3
      x-cache-status:
      - hit-front
      server-timing:
      - cache;desc="hit-front", host;desc="cp1089"
      strict-transport-security:
      - max-age=106384710; includeSubDomains; preload
      report-to:
      - '{ "group": "wm_nel", "max_age": 86400, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0"
        }] }'
      nel:
      - '{ "report_to": "wm_nel", "max_age": 86400, "failure_fraction": 0.05, "success_fraction":
        0.0}'
      permissions-policy:
      - interest-cohort=()
      set-cookie:
      - WMF-Last-Access=31-Dec-2021;Path=/;HttpOnly;secure;Expires=Tue, 01 Feb 2022
        12:00:00 GMT
      - WMF-Last-Access-Global=31-Dec-2021;Path=/;Domain=.wikipedia.org;HttpOnly;secure;Expires=Tue,
        01 Feb 2022 12:00:00 GMT
      - GeoIP=US:NY:New_York:40.72:-74.00:v4; Path=/; secure; Domain=.wikipedia.org
      x-client-ip:
      - 45.144.113.215
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate
      accept-ranges:
      - bytes
      content-length:
      - '275810'
    body:
      encoding: ASCII-8BIT
      string: ''
    http_version: '2'
    adapter_metadata:
      effective_url: https://en.wikipedia.org/wiki/Phase-locked_loop#Clock_generation
  recorded_at: Fri, 31 Dec 2021 16:37:42 GMT
- request:
    method: get
    uri: https://jekyllrb.com/docs/configuration/#markdown-options
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      server:
      - GitHub.com
      content-type:
      - text/html; charset=utf-8
      last-modified:
      - Thu, 30 Dec 2021 22:31:10 GMT
      access-control-allow-origin:
      - "*"
      etag:
      - '"61ce332e-336b"'
      expires:
      - Sun, 02 Jan 2022 02:54:38 GMT
      cache-control:
      - max-age=600
      x-proxy-cache:
      - MISS
      x-github-request-id:
      - 48F4:7511:24B0585:383C34C:61D11196
      accept-ranges:
      - bytes
      date:
      - Sun, 02 Jan 2022 16:16:06 GMT
      via:
      - 1.1 varnish
      age:
      - '0'
      x-served-by:
      - cache-ewr18156-EWR
      x-cache:
      - HIT
      x-cache-hits:
      - '1'
      x-timer:
      - S1641140166.139297,VS0,VE14
      vary:
      - Accept-Encoding
      x-fastly-request-id:
      - 5c6424f6e691b9e3bab587dc4bc4d87ed3a094f6
      content-length:
      - '13163'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: '2'
    adapter_metadata:
      effective_url: https://jekyllrb.com/docs/configuration/#markdown-options
  recorded_at: Sun, 02 Jan 2022 16:16:06 GMT
- request:
    method: get
    uri: https://rtyley.github.io/bfg-repo-cleaner/#usage
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      server:
      - GitHub.com
      content-type:
      - text/html; charset=utf-8
      permissions-policy:
      - interest-cohort=()
      last-modified:
      - Sun, 21 Mar 2021 22:37:56 GMT
      access-control-allow-origin:
      - "*"
      etag:
      - '"6057cac4-4071"'
      expires:
      - Sun, 02 Jan 2022 02:54:37 GMT
      cache-control:
      - max-age=600
      x-proxy-cache:
      - MISS
      x-github-request-id:
      - 7BC6:3681:2264675:35F5F0A:61D11195
      accept-ranges:
      - bytes
      date:
      - Sun, 02 Jan 2022 16:16:06 GMT
      via:
      - 1.1 varnish
      age:
      - '0'
      x-served-by:
      - cache-ewr18123-EWR
      x-cache:
      - HIT
      x-cache-hits:
      - '1'
      x-timer:
      - S1641140166.143422,VS0,VE17
      vary:
      - Accept-Encoding
      x-fastly-request-id:
      - fd70c71af17fb707f49c067783aae65a03e72c30
      content-length:
      - '16497'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0ndXRmLTgnPgogICAgPG1ldGEgbmFtZT0icmVmZXJyZXIiIGNvbnRlbnQ9Im9yaWdpbiI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9ImNocm9tZT0xIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xIj4KICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3J0eWxleS5naXRodWIuaW8vYmZnLXJlcG8tY2xlYW5lci8iIC8+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iQSBzaW1wbGVyLCBmYXN0ZXIgYWx0ZXJuYXRpdmUgdG8gZ2l0LWZpbHRlci1icmFuY2ggZm9yIGRlbGV0aW5nIGJpZyBmaWxlcyBhbmQgcmVtb3ZpbmcgcGFzc3dvcmRzIGZyb20gR2l0IGhpc3RvcnkuIj4KICAgIDxsaW5rIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1BcmNoaXRlY3RzK0RhdWdodGVyJyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9InN0eWxlc2hlZXRzL3N0eWxlc2hlZXQuY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0ic3R5bGVzaGVldHMvcHlnbWVudF90cmFjLmNzcyIgbWVkaWE9InNjcmVlbiIgLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9InN0eWxlc2hlZXRzL3ByaW50LmNzcyIgbWVkaWE9InByaW50IiAvPgoKICAgIDwhLS1baWYgbHQgSUUgOV0+CiAgICA8c2NyaXB0IHNyYz0iLy9odG1sNXNoaXYuZ29vZ2xlY29kZS5jb20vc3ZuL3RydW5rL2h0bWw1LmpzIj48L3NjcmlwdD4KICAgIDwhW2VuZGlmXS0tPgoKICAgIDx0aXRsZT5CRkcgUmVwby1DbGVhbmVyIGJ5IHJ0eWxleTwvdGl0bGU+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CmlmICgoInJ0eWxleS5naXRodWIuaW8iID09IHdpbmRvdy5sb2NhdGlvbi5ob3N0KSAmJiAod2luZG93LmxvY2F0aW9uLnByb3RvY29sICE9ICJodHRwczoiKSkKICAgIHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCA9ICJodHRwcyI7Cjwvc2NyaXB0Pgo8c2NyaXB0PgogIChmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsKICAoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSwKICBtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pCiAgfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwoKICBnYSgnY3JlYXRlJywgJ1VBLTQ2MjkwNzc2LTEnLCAncnR5bGV5LmdpdGh1Yi5pbycpOwogIGdhKCdzZW5kJywgJ3BhZ2V2aWV3Jyk7Cgo8L3NjcmlwdD4KICA8L2hlYWQ+CgogIDxib2R5PgogICAgPGhlYWRlcj4KICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgIDxoMT5CRkcgUmVwby1DbGVhbmVyPC9oMT4KICAgICAgICA8aDI+UmVtb3ZlcyBsYXJnZSBvciB0cm91Ymxlc29tZSBibG9icyBsaWtlIGdpdC1maWx0ZXItYnJhbmNoIGRvZXMsIGJ1dCBmYXN0ZXIuIEFuZCB3cml0dGVuIGluIFNjYWxhPC9oMj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnR5bGV5L2JmZy1yZXBvLWNsZWFuZXIiIGNsYXNzPSJidXR0b24iPjxzbWFsbD5WaWV3IHByb2plY3Qgb248L3NtYWxsPiBHaXRIdWI8L2E+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CgogICAgPGRpdiBpZD0iY29udGVudC13cmFwcGVyIj4KICAgICAgPGRpdiBjbGFzcz0iaW5uZXIgY2xlYXJmaXgiPgogICAgICAgIDxzZWN0aW9uIGlkPSJtYWluLWNvbnRlbnQiPgo8cHJlPjxjb2RlPiQgYmZnIC0tc3RyaXAtYmxvYnMtYmlnZ2VyLXRoYW4gMTAwTSAtLXJlcGxhY2UtdGV4dCBiYW5uZWQudHh0IHJlcG8uZ2l0CjwvY29kZT48L3ByZT4KCjxoMT5hbiBhbHRlcm5hdGl2ZSB0byBnaXQtZmlsdGVyLWJyYW5jaDwvaDE+CjxwPlRoZSBCRkcgaXMgYSBzaW1wbGVyLCBmYXN0ZXIgYWx0ZXJuYXRpdmUgdG8gPGEgaHJlZj0iaHR0cHM6Ly9naXQtc2NtLmNvbS9kb2NzL2dpdC1maWx0ZXItYnJhbmNoIj48Y29kZT5naXQtZmlsdGVyLWJyYW5jaDwvY29kZT48L2E+IGZvciBjbGVhbnNpbmcgYmFkIGRhdGEgb3V0IG9mIHlvdXIgR2l0IHJlcG9zaXRvcnkgaGlzdG9yeTo8L3A+Cgo8dWw+CjxsaT5SZW1vdmluZyA8c3Ryb25nPkNyYXp5IEJpZyBGaWxlczwvc3Ryb25nPjwvbGk+CjxsaT5SZW1vdmluZyA8c3Ryb25nPlBhc3N3b3Jkczwvc3Ryb25nPiwgPHN0cm9uZz5DcmVkZW50aWFsczwvc3Ryb25nPiAmYW1wOyBvdGhlciA8c3Ryb25nPlByaXZhdGUgZGF0YTwvc3Ryb25nPjwvbGk+CjwvdWw+Cgo8cD5UaGUgPGNvZGU+Z2l0LWZpbHRlci1icmFuY2g8L2NvZGU+IGNvbW1hbmQgaXMgZW5vcm1vdXNseSBwb3dlcmZ1bCBhbmQgY2FuIGRvIHRoaW5ncyB0aGF0IHRoZSBCRkcgY2FuJ3QgLSBidXQgdGhlIEJGRyBpcyA8ZW0+bXVjaDwvZW0+IGJldHRlciBmb3IgdGhlIHRhc2tzIGFib3ZlLCBiZWNhdXNlOjwvcD4KCjx1bD4KPGxpPjxhIGhyZWY9IiNzcGVlZCI+RmFzdGVyPC9hPiA6IDxzdHJvbmc+MTAgLSA3MjB4PC9zdHJvbmc+IGZhc3RlcjwvbGk+CjxsaT48YSBocmVmPSIjZXhhbXBsZXMiPlNpbXBsZXI8L2E+IDogVGhlIEJGRyBpc24ndCBwYXJ0aWN1bGFyaWx5IGNsZXZlciwgYnV0IDxlbT5pczwvZW0+IGZvY3VzZWQgb24gbWFraW5nIHRoZSBhYm92ZSB0YXNrcyBlYXN5PC9saT4KPGxpPkJlYXV0aWZ1bCA6IElmIHlvdSBuZWVkIHRvLCB5b3UgY2FuIHVzZSB0aGUgYmVhdXRpZnVsIFNjYWxhIGxhbmd1YWdlIHRvIGN1c3RvbWlzZSB0aGUgQkZHLiBXaGljaCBoYXMgZ290IHRvIGJlIGJldHRlciB0aGFuIEJhc2ggc2NyaXB0aW5nIGF0IGxlYXN0IHNvbWUgb2YgdGhlIHRpbWUuPC9saT4KPC91bD4KCjxoMSBpZD0idXNhZ2UiPlVzYWdlPC9oMT4KPHA+Rmlyc3QgY2xvbmUgYSBmcmVzaCBjb3B5IG9mIHlvdXIgcmVwbywgdXNpbmcgdGhlIDxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcS8zOTU5OTI0LzQzODg4NiI+PGNvZGU+LS1taXJyb3I8L2NvZGU+PC9hPiBmbGFnOjwvcD4KPHByZT48Y29kZT4kIGdpdCBjbG9uZSAtLW1pcnJvciBnaXQ6Ly9leGFtcGxlLmNvbS9zb21lLWJpZy1yZXBvLmdpdAo8L2NvZGU+PC9wcmU+CjxwPlRoaXMgaXMgYSA8YSBocmVmPSJodHRwczovL2dpdC1zY20uY29tL2RvY3MvZ2l0Z2xvc3NhcnkuaHRtbCNkZWZfYmFyZV9yZXBvc2l0b3J5Ij5iYXJlPC9hPgpyZXBvLCB3aGljaCBtZWFucyB5b3VyIG5vcm1hbCBmaWxlcyB3b24ndCBiZSB2aXNpYmxlLCBidXQgaXQgaXMgYSA8ZW0+ZnVsbDwvZW0+IGNvcHkgb2YgdGhlIEdpdCBkYXRhYmFzZSBvZiB5b3VyIHJlcG9zaXRvcnksIGFuZCBhdCB0aGlzIHBvaW50CnlvdSBzaG91bGQgPHN0cm9uZz5tYWtlIGEgYmFja3VwIG9mIGl0PC9zdHJvbmc+IHRvIGVuc3VyZSB5b3UgZG9uJ3QgbG9zZSBhbnl0aGluZy48L3A+CjxwPk5vdyB5b3UgY2FuIHJ1biB0aGUgQkZHIHRvIGNsZWFuIHlvdXIgcmVwb3NpdG9yeSB1cDo8L3A+CjxwcmU+PGNvZGU+JCBqYXZhIC1qYXIgPGEgY2xhc3M9ImxhdGVzdC1kb3dubG9hZC1saW5rIiBkYXRhLWV2ZW50LWNhdGVnb3J5PSJKYXZhIGNvbW1hbmQiIGhyZWY9IiNkb3dubG9hZCI+YmZnLmphcjwvYT4gLS1zdHJpcC1ibG9icy1iaWdnZXItdGhhbiAxMDBNIHNvbWUtYmlnLXJlcG8uZ2l0CjwvY29kZT48L3ByZT4KPHA+VGhlIEJGRyB3aWxsIHVwZGF0ZSB5b3VyIGNvbW1pdHMgYW5kIGFsbCBicmFuY2hlcyBhbmQgdGFncyBzbyB0aGV5IGFyZSBjbGVhbiwgYnV0IGl0IGRvZXNuJ3QgcGh5c2ljYWxseSBkZWxldGUgdGhlIHVud2FudGVkIHN0dWZmLiBFeGFtaW5lIHRoZSByZXBvIHRvIG1ha2Ugc3VyZSB5b3VyIGhpc3RvcnkgaGFzIGJlZW4gdXBkYXRlZCwgYW5kIHRoZW4gdXNlIHRoZSBzdGFuZGFyZCA8YSBocmVmPSJodHRwczovL2dpdC1zY20uY29tL2RvY3MvZ2l0LWdjIj48Y29kZT5naXQgZ2M8L2NvZGU+PC9hPiBjb21tYW5kIHRvIHN0cmlwIG91dCB0aGUgdW53YW50ZWQgZGlydHkgZGF0YSwgd2hpY2ggR2l0IHdpbGwgbm93IHJlY29nbmlzZSBhcyBzdXJwbHVzIHRvIHJlcXVpcmVtZW50czo8L3A+CjxwcmU+PGNvZGU+JCBjZCBzb21lLWJpZy1yZXBvLmdpdAokIGdpdCByZWZsb2cgZXhwaXJlIC0tZXhwaXJlPW5vdyAtLWFsbCAmJiBnaXQgZ2MgLS1wcnVuZT1ub3cgLS1hZ2dyZXNzaXZlCjwvY29kZT48L3ByZT4KPHA+RmluYWxseSwgb25jZSB5b3UncmUgaGFwcHkgd2l0aCB0aGUgdXBkYXRlZCBzdGF0ZSBvZiB5b3VyIHJlcG8sIHB1c2ggaXQgYmFjayB1cCA8ZW0+KG5vdGUgdGhhdCBiZWNhdXNlIHlvdXIgY2xvbmUgY29tbWFuZCB1c2VkIHRoZSA8Y29kZT4tLW1pcnJvcjwvY29kZT4gZmxhZywgdGhpcyBwdXNoIHdpbGwgdXBkYXRlIDxzdHJvbmc+YWxsPC9zdHJvbmc+IHJlZnMgb24geW91ciByZW1vdGUgc2VydmVyKTwvZW0+OjwvcD4KPHByZT48Y29kZT4kIGdpdCBwdXNoPC9jb2RlPjwvcHJlPgo8cD5BdCB0aGlzIHBvaW50LCB5b3UncmUgcmVhZHkgZm9yIGV2ZXJ5b25lIHRvIGRpdGNoIHRoZWlyIG9sZCBjb3BpZXMgb2YgdGhlIHJlcG8gYW5kIGRvIGZyZXNoIGNsb25lcyBvZiB0aGUgbmljZSwgbmV3IHByaXN0aW5lIGRhdGEuIEl0J3MgYmVzdCB0byBkZWxldGUgYWxsIG9sZCBjbG9uZXMsIGFzIHRoZXknbGwgaGF2ZSBkaXJ0eSBoaXN0b3J5IHRoYXQgeW91IDxpPmRvbid0PC9pPiB3YW50IHRvIHJpc2sgcHVzaGluZyBiYWNrIGludG8geW91ciBuZXdseSBjbGVhbmVkIHJlcG8uCjwvcD4KCjxoMSBpZD0iZXhhbXBsZXMiPkV4YW1wbGVzPC9oMT4KPHA+SW4gYWxsIHRoZXNlIGV4YW1wbGVzIDxjb2RlPmJmZzwvY29kZT4gaXMgYW4gYWxpYXMgZm9yIDxjb2RlPmphdmEgLWphciBiZmcuamFyPC9jb2RlPi48L3A+Cgo8cD5EZWxldGUgYWxsIGZpbGVzIG5hbWVkICdpZF9yc2EnIG9yICdpZF9kc2EnIDo8L3A+CjxwcmU+PGNvZGU+JCBiZmcgPHN0cm9uZz4tLWRlbGV0ZS1maWxlcyBpZF97ZHNhLHJzYX08L3N0cm9uZz4gIG15LXJlcG8uZ2l0PC9jb2RlPjwvcHJlPgoKPHA+UmVtb3ZlIGFsbCBibG9icyBiaWdnZXIgdGhhbiA1MCBtZWdhYnl0ZXMgOjwvcD4KPHByZT48Y29kZT4kIGJmZyA8c3Ryb25nPi0tc3RyaXAtYmxvYnMtYmlnZ2VyLXRoYW4gNTBNPC9zdHJvbmc+ICBteS1yZXBvLmdpdDwvY29kZT48L3ByZT4KCjxwPlJlcGxhY2UgYWxsIHBhc3N3b3JkcyBsaXN0ZWQgaW4gYSBmaWxlIDxlbT4ocHJlZml4IGxpbmVzICdyZWdleDonIG9yICdnbG9iOicgaWYgcmVxdWlyZWQpPC9lbT4gd2l0aCA8Y29kZT4qKipSRU1PVkVEKioqPC9jb2RlPiB3aGVyZXZlciB0aGV5IG9jY3VyIGluIHlvdXIgcmVwb3NpdG9yeSA6PC9wPgo8cHJlPjxjb2RlPiQgYmZnIDxzdHJvbmc+LS1yZXBsYWNlLXRleHQgcGFzc3dvcmRzLnR4dDwvc3Ryb25nPiAgbXktcmVwby5naXQ8L2NvZGU+PC9wcmU+Cgo8cD5SZW1vdmUgYWxsIGZvbGRlcnMgb3IgZmlsZXMgbmFtZWQgJy5naXQnIC0gYSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ2l0L2dpdC9ibG9iL2QyOWU5Yzg5ZC9mc2NrLmMjTDIyOC1MMjI5Ij5yZXNlcnZlZCBmaWxlbmFtZTwvYT4gaW4gR2l0LiBUaGVzZSBvZnRlbgogIDxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcS8xNjgyMTY0OS80Mzg4ODYiPmJlY29tZSBhIHByb2JsZW08L2E+IHdoZW4gbWlncmF0aW5nIHRvCiAgR2l0IGZyb20gb3RoZXIgc291cmNlLWNvbnRyb2wgc3lzdGVtcyBsaWtlIE1lcmN1cmlhbCA6PC9wPgo8cHJlPjxjb2RlPiQgYmZnIDxzdHJvbmc+LS1kZWxldGUtZm9sZGVycyAuZ2l0IC0tZGVsZXRlLWZpbGVzIC5naXQgIC0tbm8tYmxvYi1wcm90ZWN0aW9uPC9zdHJvbmc+ICBteS1yZXBvLmdpdDwvY29kZT48L3ByZT4KCjxwPgpGb3IgZnVydGhlciBjb21tYW5kLWxpbmUgb3B0aW9ucywgeW91IGNhbiBydW4gdGhlIEJGRyB3aXRob3V0IGFueSBhcmd1bWVudHMsCndoaWNoIHdpbGwgb3V0cHV0IDxhIGhyZWY9Imh0dHBzOi8vcmVwb3NpdG9yeS5zb25hdHlwZS5vcmcvc2VydmljZS9sb2NhbC9hcnRpZmFjdC9tYXZlbi9yZWRpcmVjdD9yPWNlbnRyYWwtcHJveHkmZz1jb20ubWFkZ2FnJmE9YmZnJnY9TEFURVNUJmU9dHh0Ij50ZXh0IGxpa2UgdGhpczwvYT4uCjwvcD4KCjxoMSBpZD0icHJvdGVjdGVkLWNvbW1pdHMiPllvdXIgPGVtPmN1cnJlbnQ8L2VtPiBmaWxlcyBhcmUgc2FjcmVkLi4uPC9oMT4KCjxwPgogICAgQnkgZGVmYXVsdCB0aGUgQkZHIGRvZXNuJ3QgbW9kaWZ5IHRoZSBjb250ZW50cyBvZiB5b3VyIDxlbT5sYXRlc3Q8L2VtPiBjb21taXQgb24geW91cgogICAgPGNvZGU+bWFzdGVyPC9jb2RlPiAob3IgJzxjb2RlPkhFQUQ8L2NvZGU+JykgYnJhbmNoLCBldmVuIHRob3VnaCBpdCA8ZW0+d2lsbDwvZW0+IGNsZWFuCiAgICBhbGwgdGhlIGNvbW1pdHMgYmVmb3JlIGl0Lgo8L3A+Cgo8cD4KICAgIFRoYXQncyBiZWNhdXNlIHlvdXIgbGF0ZXN0IGNvbW1pdCBpcyBsaWtlbHkgdG8gYmUgdGhlIG9uZQogICAgdGhhdCB5b3UgZGVwbG95IHRvIHByb2R1Y3Rpb24sIGFuZCBhIHNpbXBsZSBkZWxldGlvbiBvZiBhIHByaXZhdGUgY3JlZGVudGlhbCBvciBhIGJpZwogICAgZmlsZSBpcyBxdWl0ZSBsaWtlbHkgdG8gcmVzdWx0IGluIGJyb2tlbiBjb2RlIHRoYXQgbm8gbG9uZ2VyIGhhcyB0aGUgaGFyZC1jb2RlZCBkYXRhIGl0CiAgICBleHBlY3RzIC0geW91IG5lZWQgdG8gZml4IHRoYXQsIHRoZSBCRkcgY2FuJ3QgZG8gaXQgZm9yIHlvdS4gT25jZSB5b3UndmUgY29tbWl0dGVkIHlvdXIKICAgIGNoYW5nZXMtIGFuZCB5b3VyIGxhdGVzdCBjb21taXQgaXMgPGVtPmNsZWFuPC9lbT4gd2l0aCBub25lIG9mIHRoZSB1bmRlc2lyZWQgZGF0YSBpbiBpdCAtCiAgICB5b3UgY2FuIHJ1biB0aGUgQkZHIHRvIHBlcmZvcm0gaXQncyBzaW1wbGUgZGVsZXRpb24gb3BlcmF0aW9ucyBvdmVyIGFsbCB5b3VyIGhpc3RvcmljYWwKICAgIGNvbW1pdHMuCjwvcD4KCjxwPk5vdGU6PC9wPgo8dWw+CgogICAgPGxpPkNsZWFuaW5nIEdpdCByZXBvcyBpcyBhYm91dCA8ZW0+Y29tcGxldGVseTwvZW0+IGVyYWRpY2F0aW5nIGJhZCBzdHVmZiBmcm9tIGhpc3RvcnkuCiAgICAgICAgSWYgc29tZXRoaW5nICdiYWQnIChsaWtlIGEgMTBNQiBmaWxlLCB3aGVuIHlvdSdyZSBzcGVjaWZ5aW5nCiAgICAgICAgPGNvZGU+LS1zdHJpcC1ibG9icy1iaWdnZXItdGhhbiA1TTwvY29kZT4pIGlzIGluIGEgcHJvdGVjdGVkIGNvbW1pdCwgaXQgPGVtPndvbid0PC9lbT4gYmUKICAgICAgICBkZWxldGVkIC0gaXQnbGwgcGVyc2lzdCBpbiB5b3VyIHJlcG9zaXRvcnksCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3J0eWxleS9iZmctcmVwby1jbGVhbmVyL2lzc3Vlcy81MyNpc3N1ZWNvbW1lbnQtNTAwODg5OTciPmV2ZW4KICAgICAgICAgICAgaWYgdGhlIEJGRyBkZWxldGVzIGlmIGZyb20gZWFybGllciBjb21taXRzPC9hPi4gSWYgeW91IHdhbnQgdGhlIEJGRyB0byBkZWxldGUKICAgICAgICBzb21ldGhpbmcgPHN0cm9uZz55b3UgbmVlZCB0byBtYWtlIHN1cmUgeW91ciBjdXJyZW50IGNvbW1pdHMgYXJlIDxlbT5jbGVhbjwvZW0+PC9zdHJvbmc+LgoKICAgIDxsaT5Ob3RlIHRoYXQgYWx0aG91Z2ggdGhlIGZpbGVzIGluIHRob3NlIHByb3RlY3RlZCBjb21taXRzIHdvbid0IGJlIGNoYW5nZWQsIHdoZW4gdGhvc2UgY29tbWl0cyBmb2xsb3cgb24gZnJvbSBlYXJsaWVyIGRpcnR5IGNvbW1pdHMsIHRoZWlyIGNvbW1pdAogICAgICAgIGlkcyA8c3Ryb25nPndpbGw8L3N0cm9uZz4gY2hhbmdlLCB0byByZWZsZWN0IHRoZSBjaGFuZ2VkIGhpc3RvcnkgLSBvbmx5IHRoZSBTSEEtMSBpZCBvZiB0aGUgZmlsZXN5c3RlbS10cmVlIHdpbGwgcmVtYWluIHRoZSBzYW1lLgo8L3VsPgoKPHA+CiAgICBJZiB5b3Ugd2FudCB0byB0dXJuIG9mZiB0aGUgcHJvdGVjdGlvbiAoaW4gZ2VuZXJhbCwgbm90IHJlY29tbWVuZGVkKSB5b3UgY2FuCiAgICB1c2UgdGhlIDxjb2RlPi0tbm8tYmxvYi1wcm90ZWN0aW9uPC9jb2RlPiBmbGFnOgo8L3A+Cgo8cHJlPjxjb2RlPiQgYmZnIC0tc3RyaXAtYmlnZ2VzdC1ibG9icyAxMDAgPHN0cm9uZz4tLW5vLWJsb2ItcHJvdGVjdGlvbjwvc3Ryb25nPiByZXBvLmdpdDwvY29kZT48L3ByZT4KCgoKPGgxIGlkPSJzcGVlZCI+RmFzdGVyLi4uPC9oMT4KPHA+VGhlIEJGRyBpcyA8YSBocmVmPSJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldC9jY2M/a2V5PTBBc1IxZDVacGVzOEhkRVIzVkdVMWEzZE9jbVZITW10elQyZHNTMnhOZW5jIj4xMCAtIDcyMHg8L2E+IGZhc3Rlcgp0aGFuIDxjb2RlPmdpdC1maWx0ZXItYnJhbmNoPC9jb2RlPiwgdHVybmluZyBhbiA8ZW0+b3Zlcm5pZ2h0PC9lbT4gam9iIGludG8gb25lIHRoYXQgdGFrZXMgPGVtPmxlc3MgdGhhbiB0ZW4gbWludXRlczwvZW0+LjwvcD4KCjxpZnJhbWUgd2lkdGg9IjY0MCIgaGVpZ2h0PSIzNjAiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSXI0SUh6UGhKdUk/cmVsPTAiIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+CiZuYnNwOwo8cD5CRkcncyBwZXJmb3JtYW5jZSBhZHZhbnRhZ2UgaXMgZHVlIHRvIHRoZXNlIGZhY3RvcnM6PC9wPgoKPHVsPgo8bGk+VGhlIGFwcHJvYWNoIG9mIDxjb2RlPmdpdC1maWx0ZXItYnJhbmNoPC9jb2RlPiBpcyB0byBzdGVwIHRocm91Z2ggZXZlcnkgY29tbWl0IGluIHlvdXIgcmVwb3NpdG9yeSwgZXhhbWluaW5nIHRoZSBjb21wbGV0ZSBmaWxlLWhpZXJhcmNoeSBvZiBlYWNoIG9uZS4gRm9yIHRoZSBpbnRlbmRlZCB1c2UtY2FzZXMgb2YgVGhlIEJGRyB0aGlzIGlzIHdhc3RlZnVsLCBhcyB3ZSBkb24ndCBjYXJlIDxlbT53aGVyZTwvZW0+IGluIGEgZmlsZSBzdHJ1Y3R1cmUgYSAnYmFkJyBmaWxlIGV4aXN0cyAtIHdlIGp1c3Qgd2FudCBpdCBkZWFsdCB3aXRoLiBJbmhlcmVudCBpbiB0aGUgbmF0dXJlIG9mIEdpdCBpcyB0aGF0IDxlbT5ldmVyeTwvZW0+IGZpbGUgYW5kIGZvbGRlciBpcyByZXByZXNlbnRlZCBwcmVjaXNlbHkgb25jZSAoYW5kIGdpdmVuIGEgdW5pcXVlIDxhIGhyZWY9Imh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NIQS0xIj5TSEEtMTwvYT4gaGFzaC1pZCkuIFRoZSBCRkcgdGFrZXMgYWR2YW50YWdlIG9mIHRoaXMgdG8gcHJvY2VzcyBlYWNoIGFuZCBldmVyeSBmaWxlICZhbXA7IGZvbGRlciBleGFjdGx5IDxzdHJvbmc+b25jZTwvc3Ryb25nPiAtIG5vIG5lZWQgZm9yIGV4dHJhIHdvcmsuPC9saT4KPGxpPlRha2luZyBhZHZhbnRhZ2Ugb2YgdGhlIGdyZWF0IHN1cHBvcnQgZm9yIHBhcmFsbGVsaXNtIGluIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5zY2FsYS1sYW5nLm9yZy9vdmVydmlld3MvcGFyYWxsZWwtY29sbGVjdGlvbnMvb3ZlcnZpZXcuaHRtbCI+U2NhbGE8L2E+IGFuZCB0aGUgSlZNLCB0aGUgQkZHIGRvZXMgbXVsdGktY29yZSBwcm9jZXNzaW5nIGJ5IGRlZmF1bHQgLSB0aGUgd29yayBvZiBjbGVhbmluZyB5b3VyIEdpdCByZXBvc2l0b3J5IGlzIHNwcmVhZCBvdmVyIGV2ZXJ5IHNpbmdsZSBjb3JlIGluIHlvdXIgbWFjaGluZSBhbmQgdHlwaWNhbGx5IGNvbnN1bWVzIDEwMCUgb2YgY2FwYWNpdHkgZm9yIGEgc3Vic3RhbnRpYWwgcG9ydGlvbiBvZiB0aGUgcnVuLjwvbGk+CjxsaT5BbGwgYWN0aW9uIHRha2VzIHBsYWNlIGluIGEgc2luZ2xlIHByb2Nlc3MgKHRoZSBwcm9jZXNzIG9mIHRoZSBKVk0pLCBzbyBkb2Vzbid0IHJlcXVpcmUgdGhlIGZyZXF1ZW50IGZvcmstYW5kLWV4ZWMtaW5nIG5lZWRlZCBieSA8Y29kZT5naXQtZmlsdGVyLWJyYW5jaDwvY29kZT4ncyBtaXggb2YgQmFzaCBhbmQgQyBjb2RlLjwvbGk+CjwvdWw+Cgo8aDEgaWQ9ImZlZWRiYWNrIj5GZWVkYmFjazwvaDE+CjxibG9ja3F1b3RlPgpJIHRyaWVkIGRlbGV0aW5nIHVzaW5nIHNldmVyYWwgImhvdyB0byIgYmxvZyBlbnRyaWVzIGZvciBnaXQgZmlsdGVyLWJyYW5jaCwgYnV0IHdhc24ndCBzdWNjZXNzZnVsLiBUaGVuIHRyaWVkIFRoZSBCRkc7IHdvcmtlZCBsaWtlIGEgY2hhbXAgLSB2ZXJ5IGNvb2wgdG9vbCEKPGZpZ2NhcHRpb24gY2xhc3M9ImF0dHJpYnV0aW9uIj7igJQgPGEgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYmlsbGgiPkJpbGwgSHVudDwvYT4sIENUTyBhdCBPcHRUb3duPC9maWdjYXB0aW9uPgo8L2Jsb2NrcXVvdGU+CiZuYnNwOwo8YmxvY2txdW90ZT4KSSBmb3VuZCBUaGUgQkZHIFJlcG8tQ2xlYW5lciBhbmQgcmFuIGl0IHRvIGNsZWFuIHVwIHNvbWUgbGFyZ2UgZmlsZXMsIGFuZCB3YXMgYW1hemVkIGJ5IHRoZSBwZXJmb3JtYW5jZS4KPGZpZ2NhcHRpb24gY2xhc3M9ImF0dHJpYnV0aW9uIj7igJQgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0ZyeWd1eSI+SmFzb24gRnJleTwvYT4sIFNvZnR3YXJlIEVuZ2luZWVyIGF0IDxhIGhyZWY9Imh0dHBzOi8vd3d3LnJlZGhhdC5jb20vIj5SZWQgSGF0PC9hPjwvZmlnY2FwdGlvbj4KPC9ibG9ja3F1b3RlPgombmJzcDsKPGJsb2NrcXVvdGU+Ckkgd2FzIGFibGUgdG8gc2hyaW5rIHRoZSBjdXJyZW50IHJlcG9zaXRvcnkgZG93biB0byB+NTAwIG1lZ2FieXRlcyBpbiBhYm91dCAxMCBtaW51dGVzIHdoZW4gdXNpbmcgdGhpcyB0b29sLiBNeSBoYW5kIGNyYWZ0ZWQgc2NyaXB0cyBjbG9jayBpbiBhdCA2MTUgbWVnYWJ5dGVzIGluIDMgZGF5cyB0aW1lIGZvciBjb21wYXJpc29uLgo8ZmlnY2FwdGlvbiBjbGFzcz0iYXR0cmlidXRpb24iPuKAlCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZWdsYXlzaGVyIj5FbGxpb3QgR2xheXNoZXI8L2E+LCBHb29nbGUgU29mdHdhcmUgRW5naW5lZXIgb24gPGEgaHJlZj0iaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTExMTU3MCNjMjkiPkdvb2dsZSBDaHJvbWU8L2E+PC9maWdjYXB0aW9uPgo8L2Jsb2NrcXVvdGU+CiZuYnNwOwo8YmxvY2txdW90ZT4KVGhlIEJGRyB3YXMgc2ltcGxlIHRvIHNldCB1cCBhbmQgc28gZmFzdCB0aGF0IEkgaGFkIHRvIGFzayBSb2JlcnRvLCA8ZW0+IklzIHRoYXQgaXQ/IjwvZW0+IGFuZCBjaGVjayBmb3IgbXlzZWxmLi4uIGl0IHdvcmtlZCBleGFjdGx5IGFzIGludGVuZGVkLgo8ZmlnY2FwdGlvbiBjbGFzcz0iYXR0cmlidXRpb24iPuKAlCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbnRvbGwiPk5pY2hvbGFzIFRvbGxlcnZleTwvYT4sIERldmVsb3BlciBhdCA8YSBocmVmPSJodHRwczovL3d3dy5ndWFyZGlhbi5jby51ay8iPlRoZSBHdWFyZGlhbjwvYT48L2ZpZ2NhcHRpb24+CjwvYmxvY2txdW90ZT4KJm5ic3A7CjxibG9ja3F1b3RlPgpSb2JlcnRvJ3MgY3JlYXRpb25zICg8YSBocmVmPSJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9Y29tLm1hZGdhZy5hZ2l0Ij5BZ2l0PC9hPiBhbmQgVGhlIEJGRykgYXJlIGJvdGggdmVyeSBjb29sIDstKQo8ZmlnY2FwdGlvbiBjbGFzcz0iYXR0cmlidXRpb24iPuKAlCA8YSBocmVmPSJodHRwczovL2dpdC1ibGFtZS5ibG9nc3BvdC5jb20vIj5KdW5pbyBDIEhhbWFubzwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmJsb2cvMjAyMC0wNC0wNy1jZWxlYnJhdGluZy0xNS15ZWFycy1vZi1naXQtYW4taW50ZXJ2aWV3LXdpdGgtZ2l0LW1haW50YWluZXItanVuaW8taGFtYW5vLyI+TWFpbnRhaW5lciBvZiBHaXQ8L2E+PC9maWdjYXB0aW9uPgo8L2Jsb2NrcXVvdGU+CjxwPgogICA8c3Ryb25nPkFsc28gc2VlIG1vcmUgZmVlZGJhY2sgb24gPC9zdHJvbmc+PGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ydHlsZXkvdGltZWxpbmVzLzQ2NDcyNzI2NDM0NTk5MzIxNiI+PHN0cm9uZz5Ud2l0dGVyLi4uPC9zdHJvbmc+PC9hPgo8L3A+CjxoMT5SZXF1aXJlbWVudHM8L2gxPgo8dWw+CjxsaT5UaGUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuamF2YS5jb20vZW4vZG93bmxvYWQvbWFudWFsLmpzcCI+SmF2YSBSdW50aW1lIEVudmlyb25tZW50PC9hPiAoPGI+SmF2YSA4PC9iPiBvciBhYm92ZSAtIEJGRyA8YSBocmVmPSJodHRwczovL3JlcG8xLm1hdmVuLm9yZy9tYXZlbjIvY29tL21hZGdhZy9iZmcvMS4xMi4xNi9iZmctMS4xMi4xNi5qYXIiPnYxLjEyLjE2PC9hPiB3YXMgdGhlIGxhc3QgdmVyc2lvbiB0byBzdXBwb3J0IEphdmEgNywgPGEgaHJlZj0iaHR0cHM6Ly9yZXBvMS5tYXZlbi5vcmcvbWF2ZW4yL2NvbS9tYWRnYWcvYmZnLzEuMTIuMy9iZmctMS4xMi4zLmphciI+djEuMTIuMzwvYT4gd2FzIHRoZSBsYXN0IHZlcnNpb24gdG8gc3VwcG9ydCBKYXZhIDYpPC9saT4KPC91bD4KPHA+VGhhdCdzIGl0IC0gdGhlIFNjYWxhIGxpYnJhcnkgYW5kIGFsbCBvdGhlciBkZXBlbmRlbmNpZXMgYXJlIGZvbGRlZCBpbnRvIHRoZSA8YSBjbGFzcz0ibGF0ZXN0LWRvd25sb2FkLWxpbmsiIGRhdGEtZXZlbnQtY2F0ZWdvcnk9IlJlcXVpcmVtZW50cyBMaW5rIiBocmVmPSIjZG93bmxvYWQiPmRvd25sb2FkYWJsZSBqYXI8L2E+LjwvcD4KCjxoMSBpZD0ibGlua3MiPkxpbmtzLi4uPC9oMT4KPHVsPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZ3VhcmRpYW4uY28udWsvaW5mby9kZXZlbG9wZXItYmxvZy8yMDEzL2Fwci8yOS9yZXdyaXRlLWdpdC1oaXN0b3J5LXdpdGgtdGhlLWJmZyI+UmV3cml0aW5nIEdpdCBwcm9qZWN0IGhpc3Rvcnkgd2l0aCBUaGUgQkZHPC9hPiAtIGEgYmxvZ3Bvc3QgZm9yIFRoZSBHdWFyZGlhbjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2VwaXNvZGVzLmdpdG1pbnV0ZXMuY29tLzIwMTMvMDQvZ2l0bWludXRlcy0wNi1yb2JlcnRvLXR5bGV5LW9uLmh0bWwiPkdpdE1pbnV0ZXM8L2E+IHBvZGNhc3QgaW50ZXJ2aWV3PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnBhcmxleXMuY29tL3BsYXkvNTNhN2QyZDFlNGIwNTQzOTQwZDllNTZiIj5HaXQgR29pbmcgRmFzdGVyLi4uIHdpdGggU2NhbGE8L2E+IC0gdGFsayBmb3IgU2NhbGFEYXlzIDIwMTQsIGxhdGVyIFBhcmxleXMgPGVtPjxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vUGFybGV5cy9zdGF0dXMvNTE3MzE5ODQ4MzMxMDgzNzc2Ij5QcmVzZW50YXRpb24gb2YgdGhlIERheTwvYT48L2VtPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL3d3dy5pbmZvcS5jb20vYXJ0aWNsZXMvZ2l0LUNsZWFuZXIiPkluZm9RIGludGVydmlldzwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dpdC1yZXdyaXRlLWhpc3RvcnkiPlF1ZXN0aW9ucyB0YWdnZWQgPGNvZGU+Z2l0LXJld3JpdGUtaGlzdG9yeTwvY29kZT48L2E+IG9uIFN0YWNrIE92ZXJmbG93PC9saT4KPC91bD4KCjxoMT5MaWNlbnNlPC9oMT4KCjxwPlRoZSBCRkcgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQogICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSA8YSBocmVmPSJodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC5odG1sIj5HTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZTwvYT4gYXMgcHVibGlzaGVkIGJ5CiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvcgogICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi48L3A+Cgo8cD5UaGUgQkZHIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgogICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQogICAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy48L3A+CgogICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgPGFzaWRlIGlkPSJzaWRlYmFyIj4KICAgICAgICAgIDxhIGlkPSJkb3dubG9hZCIgY2xhc3M9ImJ1dHRvbiBsYXRlc3QtZG93bmxvYWQtbGluayIgZGF0YS1ldmVudC1jYXRlZ29yeT0iTWFpbiBkb3dubG9hZCBidXR0b24iIGhyZWY9Imh0dHBzOi8vcmVwbzEubWF2ZW4ub3JnL21hdmVuMi9jb20vbWFkZ2FnL2JmZy8xLjE0LjAvYmZnLTEuMTQuMC5qYXIiPgogICAgICAgICAgICA8c21hbGw+RG93bmxvYWQ8L3NtYWxsPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGF0ZXN0LXZlcnNpb24iPi5qYXIgZmlsZTwvc3Bhbj4KICAgICAgICAgIDwvYT4KCiAgICAgICAgICA8cCBjbGFzcz0icmVwby1vd25lciI+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3J0eWxleS9iZmctcmVwby1jbGVhbmVyIj5UaGUgQkZHPC9hPiBpcyBieSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnR5bGV5Ij5Sb2JlcnRvIFR5bGV5PC9hPiwgdGhlIGF1dGhvciBvZiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ3VhcmRpYW4vcHJvdXQiPlByb3V0PC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2d1YXJkaWFuL2d1LXdobyI+Z3U6d2hvPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWNvbS5tYWRnYWcuYWdpdCI+QWdpdDwvYT4gYW5kIHRoZSBwYWNrYWdlciBvZiA8YSBocmVmPSJodHRwczovL3J0eWxleS5naXRodWIuaW8vc3Bvbmd5Y2FzdGxlLyI+U3Bvbmd5IENhc3RsZTwvYT4uIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vcnR5bGV5Ij5Ud2l0dGVyPC9hPiA8YSBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS8rUm9iZXJ0b1R5bGV5P3JlbD1hdXRob3IiPkdvb2dsZSs8L2E+IDxhIGhyZWY9InJ0eWxleS5ncGciPlBHUDwvYT48L3A+CiAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3RyYXZpcy1jaS5jb20vcnR5bGV5L2JmZy1yZXBvLWNsZWFuZXIiPjxpbWcgc3JjPSJodHRwczovL3RyYXZpcy1jaS5jb20vcnR5bGV5L2JmZy1yZXBvLWNsZWFuZXIuc3ZnP2JyYW5jaD1tYXN0ZXIiIGFsdD0iQnVpbGQgU3RhdHVzIj48L2E+PC9wPgo8cD48aWZyYW1lIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL3Nwb25zb3JzL3J0eWxleS9idXR0b24iIHRpdGxlPSJTcG9uc29yIHJ0eWxleSIgaGVpZ2h0PSIzNSIgd2lkdGg9IjExNiIgc3R5bGU9ImJvcmRlcjogMDsiPjwvaWZyYW1lPjxwPgogICAgICAgICAgICAKCiAgICAgICAgICA8cD5UaGlzIHBhZ2Ugd2FzIGdlbmVyYXRlZCBieSA8YSBocmVmPSJodHRwczovL3BhZ2VzLmdpdGh1Yi5jb20vIj5HaXRIdWIgUGFnZXM8L2E+IHVzaW5nIHRoZSBBcmNoaXRlY3QgdGhlbWUgYnkgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9qYXNvbmxvbmciPkphc29uIExvbmc8L2E+LjwvcD4KICAgICAgICA8L2FzaWRlPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMS44LjMvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICB2YXIgdiA9ICIxLjE0LjAiOwogICAgdmFyIHUgPSAiaHR0cHM6Ly9yZXBvMS5tYXZlbi5vcmcvbWF2ZW4yL2NvbS9tYWRnYWcvYmZnLyIrdisiL2JmZy0iK3YrIi5qYXIiCiAgICAkKCcubGF0ZXN0LXZlcnNpb24nKS50ZXh0KCd2JyArIHYpOwogICAgJCgnLmxhdGVzdC1kb3dubG9hZC1saW5rJykucHJvcCgiaHJlZiIsIHUpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgaWYgKGdhLmhhc093blByb3BlcnR5KCdsb2FkZWQnKSAmJiBnYS5sb2FkZWQgPT09IHRydWUpIHsKICAgICAgICAgICAgZ2EoJ3NlbmQnLCAnZXZlbnQnLCB7CiAgICAgICAgICAgICAgICAnZXZlbnRDYXRlZ29yeScgOiAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoImV2ZW50Q2F0ZWdvcnkiKSwKICAgICAgICAgICAgICAgICdldmVudEFjdGlvbicgOiAnY2xpY2snLAogICAgICAgICAgICAgICAgJ2V2ZW50TGFiZWwnIDogJ2Rvd25sb2FkJywKICAgICAgICAgICAgICAgICdoaXRDYWxsYmFjaycgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24gPSB1OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0pOwo8L3NjcmlwdD4KICA8L2JvZHk+CjwvaHRtbD4K
    http_version: '2'
    adapter_metadata:
      effective_url: https://rtyley.github.io/bfg-repo-cleaner/#usage
  recorded_at: Sun, 02 Jan 2022 16:16:06 GMT
- request:
    method: get
    uri: https://en.wikipedia.org/wiki/Phase-locked_loop#Clock_generation
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      date:
      - Sun, 02 Jan 2022 10:48:28 GMT
      server:
      - mw1429.eqiad.wmnet
      x-content-type-options:
      - nosniff
      p3p:
      - CP="See https://en.wikipedia.org/wiki/Special:CentralAutoLogin/P3P for more
        info."
      content-language:
      - en
      vary:
      - Accept-Encoding,Cookie,Authorization
      last-modified:
      - Sun, 02 Jan 2022 09:16:54 GMT
      content-type:
      - text/html; charset=UTF-8
      age:
      - '19658'
      x-cache:
      - cp1083 hit, cp1081 hit/1
      x-cache-status:
      - hit-front
      server-timing:
      - cache;desc="hit-front", host;desc="cp1081"
      strict-transport-security:
      - max-age=106384710; includeSubDomains; preload
      report-to:
      - '{ "group": "wm_nel", "max_age": 86400, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0"
        }] }'
      nel:
      - '{ "report_to": "wm_nel", "max_age": 86400, "failure_fraction": 0.05, "success_fraction":
        0.0}'
      permissions-policy:
      - interest-cohort=()
      set-cookie:
      - WMF-Last-Access=02-Jan-2022;Path=/;HttpOnly;secure;Expires=Thu, 03 Feb 2022
        12:00:00 GMT
      - WMF-Last-Access-Global=02-Jan-2022;Path=/;Domain=.wikipedia.org;HttpOnly;secure;Expires=Thu,
        03 Feb 2022 12:00:00 GMT
      - GeoIP=US:NY:New_York:40.72:-74.00:v4; Path=/; secure; Domain=.wikipedia.org
      x-client-ip:
      - 62.182.99.133
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate
      accept-ranges:
      - bytes
      content-length:
      - '275810'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: '2'
    adapter_metadata:
      effective_url: https://en.wikipedia.org/wiki/Phase-locked_loop#Clock_generation
  recorded_at: Sun, 02 Jan 2022 16:16:06 GMT
- request:
    method: head
    uri: https://jekyllrb.com/docs/configuration
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; HTML Proofer/3.19.3; +https://github.com/gjtorikian/html-proofer)
      Accept:
      - application/xml,application/xhtml+xml,text/html;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      server:
      - GitHub.com
      content-type:
      - text/html; charset=utf-8
      x-origin-cache:
      - HIT
      last-modified:
      - Thu, 30 Dec 2021 22:31:10 GMT
      access-control-allow-origin:
      - "*"
      etag:
      - '"61ce332e-336b"'
      expires:
      - Sun, 02 Jan 2022 21:01:38 GMT
      cache-control:
      - max-age=600
      x-proxy-cache:
      - MISS
      x-github-request-id:
      - ACA6:6F9E:24DEFE4:353E870:61D2105A
      accept-ranges:
      - bytes
      date:
      - Sun, 02 Jan 2022 20:51:38 GMT
      via:
      - 1.1 varnish
      age:
      - '0'
      x-served-by:
      - cache-ewr18161-EWR
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1641156698.081378,VS0,VE11
      vary:
      - Accept-Encoding
      x-fastly-request-id:
      - 3c00e4cf8b6f8abe2ea666e76727ced08b098e64
      content-length:
      - '13163'
    body:
      encoding: ASCII-8BIT
      string: ''
    http_version: '2'
    adapter_metadata:
      effective_url: https://jekyllrb.com/docs/configuration/
  recorded_at: Sun, 02 Jan 2022 20:51:38 GMT
recorded_with: VCR 2.9.3
